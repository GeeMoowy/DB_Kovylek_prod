name: Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Prepare environment file
        run: |
          echo "SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" > .env
          echo "DB_NAME=${{ secrets.POSTGRES_DB }}" >> .env
          echo "DB_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "DB_HOST=db" >> .env
          echo "DEBUG=0" >> .env

      - name: Copy files to server
        run: |
          scp -o StrictHostKeyChecking=no -r .env docker-compose.yml nginx.conf ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:~/app/
          scp -o StrictHostKeyChecking=no -r . ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:~/app/

      - name: Deploy on server
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          set -e
          cd ~/app
          docker compose down
          docker compose up -d --build
          docker compose exec web python manage.py migrate --noinput
          docker compose exec web python manage.py collectstatic --noinput
          docker system prune -f
          EOF

      - name: Health check
        run: |
          curl --retry 5 --retry-delay 10 --retry-connrefused -X GET http://${{ secrets.SERVER_IP }}/api/health/